---
export const prerender = false;

import Layout from '../layouts/Layout.astro';
import { actions, isInputError } from 'astro:actions';

const result = Astro.getActionResult(actions.contact);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

<Layout title="Contact - Dejan Vasic">
	<main class="container">
		<h1>Get in Touch</h1>
		<p class="intro">
			Have a project in mind or want to discuss how I can help? Fill out the form below and I'll get
			back to you as soon as possible.
		</p>

		<form method="POST" action={actions.contact}>
			<div class="form-group">
				<label for="name">Name *</label>
				<input type="text" id="name" name="name" autocomplete="name" transition:persist />
				{inputErrors.name && <p class="field-error">{inputErrors.name}</p>}
			</div>

			<div class="form-group">
				<label for="email">Email *</label>
				<input type="text" id="email" name="email" autocomplete="email" transition:persist />
				{inputErrors.email && <p class="field-error">{inputErrors.email}</p>}
			</div>

			<div class="form-group">
				<label for="projectType">Project Type</label>
				<select id="projectType" name="projectType" transition:persist>
					<option value="">Select a type...</option>
					<option value="web-development">Web Development</option>
					<option value="consulting">Consulting</option>
					<option value="long-term-contract">Long-term Contract</option>
					<option value="other">Other</option>
				</select>
			</div>

			<div class="form-group">
				<label for="message">Message *</label>
				<textarea
					id="message"
					name="message"
					rows="6"
					placeholder="Tell me about your project..."
					transition:persist></textarea>
				{inputErrors.message && <p class="field-error">{inputErrors.message}</p>}
			</div>

			{
				result?.data?.success && (
					<div class="success-message">
						<p>{result.data.message}</p>
					</div>
				)
			}

			<button type="submit" class="btn-primary">Send Message</button>
		</form>
	</main>
</Layout>

<style>
	h1 {
		font-size: 2.5rem;
		margin-bottom: 1rem;
	}

	.intro {
		color: var(--color-text-light);
		margin-bottom: 2rem;
		font-size: 1.1rem;
	}

	form {
		max-width: 600px;
		margin: 0 auto;
	}

	.form-group {
		margin-bottom: 1.5rem;
	}

	label {
		display: block;
		margin-bottom: 0.5rem;
		font-weight: 500;
		color: var(--color-text);
	}

	input,
	select,
	textarea {
		width: 100%;
		padding: 0.75rem;
		border: 1px solid var(--color-border);
		border-radius: 4px;
		font-size: 1rem;
		font-family: inherit;
		background: var(--color-bg);
		color: var(--color-text);
		transition: border-color 0.2s;
	}

	input:focus,
	select:focus,
	textarea:focus {
		outline: none;
		border-color: var(--color-primary, #0066cc);
	}

	textarea {
		resize: vertical;
		min-height: 120px;
	}

	.btn-primary {
		background: var(--color-primary, #0066cc);
		color: white;
		padding: 0.75rem 2rem;
		border: none;
		border-radius: 4px;
		font-size: 1rem;
		font-weight: 500;
		cursor: pointer;
		transition: opacity 0.2s;
	}

	.btn-primary:hover {
		opacity: 0.9;
	}

	.error-message {
		background: #fee;
		border: 1px solid #fcc;
		border-radius: 4px;
		padding: 1rem;
		margin-bottom: 1rem;
		color: #c33;
	}

	.error-message ul {
		margin: 0.5rem 0 0 1.5rem;
	}

	.field-error {
		color: #c33;
		font-size: 0.9rem;
		margin-top: 0.25rem;
	}

	.success-message {
		background: #efe;
		border: 1px solid #cfc;
		border-radius: 4px;
		padding: 1rem;
		margin-bottom: 1rem;
		color: #3c3;
	}

	.success-message p {
		margin: 0;
	}
</style>
